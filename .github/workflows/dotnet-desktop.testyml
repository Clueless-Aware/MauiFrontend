name: .Net Core Maui Build CD

on: 
  # push:
  #   branches: ["master"]
  pull_request:
    branches: ["master"]
env: 
  # App_Packages_Archive: AppPackages.zip
  # App_Packages_Directory: AppPackages
  # SigningCertificate: GitHubActionsDemo.pfx
  Solution_Path: ProjectWork/ProjectWork.csproj
  # Test_Project_Path: MyWpfApp.Tests\MyWpfApp.Tests.csproj
  # Wpf_Project_Path: MyWpfApp\MyWpfApp.csproj
  # Wap_Project_Directory: MyWpfApp.Package
  # Wap_Project_Name: MyWpfApp.Package.wapproj
  # Actions_Allow_Unsecure_Commands: true # Allows AddPAth and SetEnv commands

jobs:

  build_blazor_hybrid_windows:
    name: build blazor hybrid (Windows)
    
    runs-on: Windows-latest


    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      #.Net Core Workload
      - name: Install .Net Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.1
        #with:
          #msbuild-architecture: x64
        
        
      #Restore the application to populate the obj folder with RuntimeIdentifiers
      - name: Restore the application
        run: msbuild $env:Solution_Path /t:Restore 
        

      

      
      - name: Restore workloads
        run: dotnet workload restore $env:Solution_Path -p:BlazorMode=BlazorHybrid -f net7.0-windows10.0.19041.0
        
      - name: Fix maui missing at list (maui packages)
        run: dotnet workload install maui

      - name: Extract Android signing key from env
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'myapp.keystore'
          encodedString: ${{ secrets.ANDROID_RELEASE_KEYSTORE_FILE_BASE64 }}

      - name: Build (To generate CSS/JS files)
        run: dotnet build $env:Solution_Path -p:BlazorMode=BlazorHybrid -p:Configuration=Release -f net7.0-windows10.0.19041.0
    
      #win64
      - name: Build exe
        run: dotnet build $env:Solution_Path -p:BlazorMode=BlazorHybrid -p:Configuration=Release -p:WindowsPackageType=None -p:SelfContained=true -p:WindowsAppSDKSelfContained=true -p:GenerateAppxPackageOnBuild=false -p:RuntimeIdentifier=win10-x64 -f net7.0-windows10.0.19041.0
      
        
      - name: Upload artifact win64
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: bin/release/net7.0-windows10.0.19041.0/win10-x64
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
  
      - name: Build aab
        run: dotnet build $env:Solution_Path -p:BlazorMode=BlazorHybrid -p:Configuration=Release -p:AndroidPackageFormat=aab -p:AndroidKeyStore=true -p:AndroidSigningKeyStore="myapp.keystore" -p:AndroidSigningKeyAlias=mauikey -p:AndroidSigningKeyPass="${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSWORD }}" -p:AndroidSigningStorePass="${{ secrets.ANDROID_RELEASE_SIGNING_PASSWORD }}" -f net7.0-android
    
      - name: Build apk
        run: dotnet build $env:Solution_Path -p:BlazorMode=BlazorHybrid -p:Configuration=Release -p:AndroidKeyStore=true -p:AndroidSigningKeyStore="TodoTemplate.keystore" -p:AndroidSigningKeyAlias=TodoTemplate -p:AndroidSigningKeyPass="${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSWORD }}" -p:AndroidSigningStorePass="${{ secrets.ANDROID_RELEASE_SIGNING_PASSWORD }}" -f net7.0-android
    
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-bundle
          path: bin/release/net7.0-android/*-Signed.*

  build_blazor_hybrid_maccatalyst:
     name: build blazor hybrid (maccatalyst)
     runs-on: macos-latest
   
     steps:
      
     - name: Checkout source code
       uses: actions/checkout@v3
      
     - name: Setup .NET
       uses: actions/setup-dotnet@v3
       with:
          dotnet-version: 6.0.x
          
   
     - name: Restore workloads
       run: dotnet workload restore test.csproj -p:BlazorMode=BlazorHybrid -f net7.0-maccatalyst
   
     - name: Build (To generate CSS/JS files)
       run: dotnet build test.csproj -p:BlazorMode=BlazorHybrid -p:Configuration=Release -p:CreatePackage=true -f net7.0-maccatalyst
   
     - name: Build pkg
       run: dotnet build test.csproj -p:BlazorMode=BlazorHybrid -p:Configuration=Release -p:CreatePackage=true -f net7.0-maccatalyst
   
     - name: Upload artifact
       uses: actions/upload-artifact@v3
       with:
         name: mac-pkg-bundle
         path: bin/release/net7.0-maccatalyst/*.pkg
