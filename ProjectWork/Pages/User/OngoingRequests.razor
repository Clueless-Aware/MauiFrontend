@page "/OutgoingRequests"

<style>
    div.scrollmenu {
        overflow: auto;
        white-space: nowrap;
        background-color: white;
    }

        div.scrollmenu table {
            display: inline-block;
            color: white;
            text-align: center;
            padding: 14px;
            text-decoration: none;
        }

        div.scrollmenu a:hover {
            background-color: #777;
        }

        td{
            color: black;
        }
</style>

<h3>Ongoing Requests</h3>
<hr />

@if (!App.Authentication.UserSession.User.Requests.Any())
{
    <p>
        You have not sent any requests on this account,
        if you have any questions or find any other issues make sure to <a href="send-request">write the staff</a>
    </p>
}
else
{
    <div class="scrollmenu">
        <table class="table table-hover">
            <thead style="background-color: #cc0000">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Subject</th>
                    <th scope="col">Content</th>
                    <th scope="col">Date</th>
                    <th scope="col">Seen</th>
                    <th scope="col">Completed</th>
                </tr>
            </thead>
            <tbody class="table-group-divider">
                @foreach (var request in App.Authentication.UserSession.User.Requests)
                {
                    <tr>
                        <td scope="row">@request.Id</td>
                        <td>@request.Subject</td>
                        <td>@request.Content</td>
                        <td>@request.Date</td>
                        <td>
                            <input type="checkbox" checked="@request.IsSeen" disabled="disabled" />
                        </td>
                        <td>
                            <input type="checkbox" checked="@request.IsCompleted" disabled="disabled" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {

    protected override async Task OnInitializedAsync()
    {
        await App.Authentication.RefreshUserState();
        await base.OnInitializedAsync();
    }

}