@page "/artwork"
@using ProjectWork.Models.Artwork;
@using ProjectWork.ViewModels;
@using System.ComponentModel;
@*HTML DI ANGULAR VIEW *@
@inject ArtworkViewModel Artwork

<Animate Animation="Animations.SlideLeft" Duration="TimeSpan.FromSeconds(0.2)">
    <h3>Add Artwork</h3>
    <hr />
    @implements IDisposable
    @layout AdminLayout
    <div class="w3-padding">@*
        <EditForm Model="@artwork" OnValidSubmit="async ()=>await Artwork.AddItemAsync(artwork)">
            <ul style ="list-style-type:none;" class="w3-margin">

                <li class="w3-padding w3-large w3-bold ">
                    <label for="slug">Slug</label>
                </li>
                <li class="w3-padding w3-margin-bottom">
                    <input class=" w3-round" type="text" @bind-value="artwork.Artist" placeholder="Enter Title" name="Slug">
                </li>

                <li class="w3-padding w3-large w3-bold \">
                    <label for="title">Title</label>
                </li>
                <li class="w3-padding w3-margin-bottom">
                    <input class=" w3-round" type="text" @bind-value="artwork.Title" placeholder="Enter author" name="Title">
                </li>

                <li class="w3-padding w3-large w3-bold ">
                    <label for="description">Description</label>
                </li>
                <li class="w3-padding w3-margin-bottom">
                    <input class=" w3-round" type="text" @bind-value="artwork.PictureData" placeholder="Enter Description" name="Description">
                </li>

                <li class="w3-padding w3-large w3-bold ">
                    <label for="description">Description</label>
                </li>
                <li class="w3-padding w3-margin-bottom">
                    <input class=" w3-round" type="text" @bind-value="artwork.FileInfo" placeholder="Enter Description" name="Description">
                </li>

                <li class="w3-padding w3-large w3-bold ">
                    <label for="description">Description</label>
                </li>
                <li class="w3-padding w3-margin-bottom">
                    <input class=" w3-round" type="text" @bind-value="artwork.Date" placeholder="Enter Description" name="Description">
                </li>

                <li class="w3-padding w3-large w3-bold ">
                    <label for="description">Description</label>
                </li>
                <li class="w3-padding w3-margin-bottom">
                    <input class=" w3-round" type="text" @bind-value="artwork.Type" placeholder="Enter Description" name="Description">
                </li>

                <li class="w3-padding w3-large w3-bold ">
                    <label for="description">Description</label>
                </li>
                <li class="w3-padding w3-margin-bottom">
                    <input class=" w3-round" type="text" @bind-value="artwork.Size" placeholder="Enter Description" name="Description">
                </li>

                <li class="w3-padding w3-large w3-bold ">
                    <label for="description">Description</label>
                </li>
                <li class="w3-padding w3-margin-bottom">
                    <input class=" w3-round" type="text" @bind-value="artwork.Museum" placeholder="Enter Description" name="Description">
                </li>



                <li class="w3-padding w3-large w3-bold ">
                    <label for="author">Author</label>
                </li>

                <li class="w3-margin-bottom">
                    <InputFile class="w3-button w3-round" OnChange="@OnInputFile" />
                </li>

            </ul>



            <button class="w3-button w3-round-large w3-red" type="submit"> Add </button>

        </EditForm>
    *@</div>


    <hr />
    @if(Artwork.GenericData != null)
    @*TODO: Create a var if data is empty*@
    @if (Artwork.GenericData.Data != null && Artwork.GenericData.Data.Count > 0 )
    {
    <PaginatorComponent Paginator="@Artwork.Paginator"> </PaginatorComponent>
@*        @foreach (var item in Artwork.GenericData.Data)
        {
            <hr />
            <p>@item.Id</p>
            <p>@item.Artist</p>
            <p>@item.Title</p>
            <p>@item.Date</p>
            <p>@item.Type</p>
            <p>@item.Size</p>
            <p>@item.Museum</p>
            <img src="@item.ImageUrl">
            <h4>Delete</h4>
            <button @onclick="async ()=>await Artwork.DeleteItemAsync(item.Id)">delete</button>
            <hr />
            <h4>Edit</h4>
            <EditForm Model="@item" OnValidSubmit="async ()=>await Artwork.UpdateItemAsync(item)">
                <div>
                    <label for="slug"><b>slug</b></label>
                    <input type="text" @bind-value="item.Artist" placeholder="Enter Title" name="Slug">
                </div>
                <div>
                    <label for="title"><b>title</b></label>
                    <input type="text" @bind-value="item.Title" placeholder="Enter author" name="Title">
                </div>
                <div>
                    <label for="description"><b>description</b></label>
                    <input type="text" @bind-value="item.PictureData" placeholder="Enter Description" name="Description">
                </div>
                <div>
                    <label for="description"><b>description</b></label>
                    <input type="text" @bind-value="item.FileInfo" placeholder="Enter Description" name="Description">
                </div>
                <div>
                    <label for="description"><b>description</b></label>
                    <input type="text" @bind-value="item.Date" placeholder="Enter Description" name="Description">
                </div>
                <div>
                    <label for="description"><b>description</b></label>
                    <input type="text" @bind-value="item.Type" placeholder="Enter Description" name="Description">
                </div>
                <div>
                    <label for="description"><b>description</b></label>
                    <input type="text" @bind-value="item.Size" placeholder="Enter Description" name="Description">
                </div>
                <div>
                    <label for="description"><b>description</b></label>
                    <input type="text" @bind-value="item.Museum" placeholder="Enter Description" name="Description">
                </div>
                <div>
                    <label for="author"><b>author</b></label>
                    <InputFile OnChange="(e)=> OnInputFile(e,item)" />
                </div>
                <button type="submit"> Edit </button>


        }
*@    }
</Animate>

@code {
    BaseArtwork artwork = new BaseArtwork();
    protected override async Task OnInitializedAsync()
    {
        Artwork.PropertyChanged += async (sender, e) =>
        {
            await InvokeAsync(() =>
            {
                StateHasChanged();
            });
        };
        //TODO: CLEAR PARAMETERS
        await Artwork.GetGenericDataFromPageAsync();
        await base.OnInitializedAsync();
    }
    async void OnPropertyChangedHandler(object sender, PropertyChangedEventArgs e)
    {
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }
    public void Dispose()
    {
        Artwork.PropertyChanged -= OnPropertyChangedHandler;
    }
    //Change the upload model
    void OnInputFile(InputFileChangeEventArgs e,BaseArtwork item)
    {
        item.File = e.File;
    }
    void OnInputFile(InputFileChangeEventArgs e)
    {
        artwork.File = e.File;
    }
}

