@page "/detail-artist/{Id:int}"
@using ProjectWork.Models.Artwork
@using ProjectWork.ViewModels.Artist
@using ProjectWork.Models.Artist
@inject SearchArtistVM ArtistDirector
@inject IJSRuntime JsRuntime
<div id="main" class="card m-4 shadow-lg p-3 bg-white">

    <!-- ======= End Page Header ======= -->
    <div class="page-header d-flex align-items-center card-header">
        <div class="container position-relative">
            <div class="row d-flex justify-content-center">
                <div class="col-lg-6 text-center card-title">
                    <h1>@_artist.Name</h1>
                </div>
            </div>
        </div>
    </div><!-- End Page Header -->
    <!-- ======= About Section ======= -->
    <section id="about" class="about card-body">
        <div class="container">

            <div class="row gy-4 justify-content-center">
                <div class="col-lg-4">
                    <img src="@_artist.Portrait" class="img-thumbnail" alt="@_artist.Name">
                </div>
                <div class="col-lg-5 content">
                    <div class="row">
                        <div class="col-lg">
                            <ul>
                                <li>
                                    <span class="material-symbols-outlined">
                                        palette
                                    </span>
                                    <strong>Profession:</strong> <span>@_artist.Profession</span>
                                </li>
                                <li>
                                    <span class="material-symbols-outlined">
                                        calendar_month
                                    </span> <strong>Birth date:</strong> <span>@_artist.BirthData</span>
                                </li>
                                <li>
                                    <span class="material-symbols-outlined">
                                        location_city
                                    </span><strong>School:</strong> <span>@_artist.School</span>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <p class="py-3">
                @_artist.Biography
            </p>
        </div>
    </section><!-- End About Section -->
</div>

@*<section id="gallery" class="gallery">
    <div class="container-fluid">
    @if (_otherArtworks is not null)
    {
    @foreach (var other in _otherArtworks)
    {
    <div class="row gy-4 justify-content-center">
    <!-- Start Gallery Item -->
    <div class="col-xl-3 col-lg-4 col-md-6">
    <div class="gallery-item h-100">
    <img src="assets/img/gallery/gallery-1.jpg" class="img-fluid" alt="">
    <div class="gallery-links d-flex align-items-center justify-content-center">
    <a href="assets/img/gallery/gallery-1.jpg" title="Gallery 1" class="glightbox preview-link"><i class="bi bi-arrows-angle-expand"></i></a>
    <a href="gallery-single.html" class="details-link"><i class="bi bi-link-45deg"></i></a>
    <p>
    @other.Title
    </p>
    </div>
    </div>
    </div><!-- End Gallery Item -->
    </div>
    }
    }
    </div>
    </section>*@
<!-- End Gallery Section -->
@code {
    [Parameter]
    public int Id { get; set; }
    private BaseArtist _artist;
    private IList<BaseArtist> _otherArtists;
    protected override async void OnParametersSet()
    {
        this._artist = ArtistDirector.GenericData.Data.SingleOrDefault(a => a.Id == Id);
        var baseArtwork = this._artist;
        //var paremeteN = new Parameters();
        //paremeteN.SetSpecific(new BaseArtwork() { AuthorId = baseArtwork.AuthorId });
        //if (baseArtwork != null) ArtistDirector.Parameters = paremeteN;
        //var result = await ArtistDirector.GetGenericDataFromPageAsync();
        //_otherArtworks = ArtistDirector.GenericData.Data;
        //this.StateHasChanged();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JsRuntime.InvokeVoidAsync("Main.start");
    }
}
