@page "/artist-search"
@using ProjectWork.ViewModels.Artist
@using System.ComponentModel

@inject SearchArtistViewModel ArtistDirector
@inject IJSRuntime JsRuntime

<section id="hero" class="hero d-flex flex-column justify-content-center align-items-center">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-6 text-center">
                <h1>Search</h1>
                <p>Here you can search for any artist you are interested in.</p>
            </div>
        </div>
        <SearchArtist></SearchArtist>
    </div>
</section>
<div>
    <PaginatorComponent Paginator="ArtistDirector.Paginator"></PaginatorComponent>
</div>
<div>
    <div class="w3-center">
        @if (ArtistDirector.GenericData != null && ArtistDirector.GenericData.Data != null)
        {
            @foreach (var artist in ArtistDirector.GenericData.Data)
            {
                <div class="w3-card-4 w3-margin-bottom w3-animate-right w3-round-large w3-white m-sm-2 m-lg-5 p-lg-3 p-sm-2">
                    <a class="w3-xlarge" href="/detail-artist/@artist.Id">@artist.Name</a>
                    <div class="d-flex flex-column flex-xl-row flex-lg-row flex-md-column flex-sm-column">
                        <div class="w3-col m6 w3-center w3-padding">
                            <img class="w3-round w3-image w3-margin-bottom img-thumbnail" src="@artist.Portrait" alt="@artist.Name"/>
                        </div>
                        <div class="portfolio-info w-100 w3-margin-left w3-margin-right">
                            <h3>Artist information</h3>
                            <table class="w-100 w3-margin-top px-lg-5 px-4">
                                <tr class="w3-hide-small">
                                    <td>
                                        <span class="material-symbols-outlined">
                                            palette
                                        </span>
                                    </td>
                                    <td>
                                        <span class="material-symbols-outlined">
                                            calendar_month
                                        </span>
                                    </td>
                                    <td>
                                        <span class="material-symbols-outlined">
                                            location_city
                                        </span>
                                    </td>
                                </tr>
                                <tr class="w3-hide-large w3-hide-medium">
                                    <td>
                                        <span class="material-symbols-outlined">
                                            palette
                                        </span>
                                    </td>
                                    <td>
                                        <span class="material-symbols-outlined">
                                            location_city
                                        </span>
                                    </td>
                                </tr>
                                <tr class="w3-hide-large w3-hide-medium">
                                    <td>
                                        @Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(artist.Profession)
                                    </td>
                                    <td>
                                        @artist.School
                                    </td>
                                </tr>
                                <tr class="w3-hide-small">
                                    <td>
                                        @Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(artist.Profession)
                                    </td>
                                    <td>
                                        @artist.BirthData
                                    </td>
                                    <td>
                                        @artist.School
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="w3-padding-24 w3-round-large w3-opacity w3-margin-top">
                <p class="middle">No results were found from your search.</p>
            </div>
        }
    </div>
</div>

@code {

    protected override async Task OnInitializedAsync()
    {
        ArtistDirector.PropertyChanged += async (sender, e) => { await InvokeAsync(StateHasChanged); };
        await ArtistDirector.GetGenericDataFromPageAsync();
        await base.OnInitializedAsync();
    }

    async void OnPropertyChangedHandler(object sender, PropertyChangedEventArgs e)
    {
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ArtistDirector.PropertyChanged -= OnPropertyChangedHandler;
    }

}