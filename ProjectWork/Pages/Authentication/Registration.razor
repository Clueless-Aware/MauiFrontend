@page "/registration"
@using ProjectWork.Models.Core.Authentication
@using ProjectWork.Utilities
@using Microsoft.Maui.Controls.Xaml.Diagnostics
@layout MainLayout

@inject NavigationManager NavManager
<style>
    #content-container {
        background-image: url("bg-login.jpg");
        background-size: cover;
        background-position: inherit;
    }
</style>
<Animate Animation="Animations.SlideDown" Duration="TimeSpan.FromSeconds(0.2)" class="text-center" style="height: 100%; width: 100%; display: flex !important; align-items: center; justify-content: center; padding-top: 40px; padding-bottom: 40px;background-color:rgba(0, 0, 0, 0.5);">
    <div id="register-card" class="card">
        <span class="material-symbols-outlined w3-text-white w3-margin-bottom w3-margin-top w3-xxxlarge w3-circle main-gradient" id="logo"> brush </span>

        <h1 class="w3-card-2 w3-red main-gradient w3-text-white w3-round-xlarge w3-xxlarge w3-margin-bottom" style="text-shadow: 8px; font-weight: bolder;" tabindex="-1">
            ART SCOUT
        </h1>
        <h2 class="text-uppercase text-center mb-5">Create an account</h2>
        <main class="form-registration">

            @if (state)
            {
                <EditForm Model="@registrationModel" OnValidSubmit="NextSlide">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-floating">
                        <input type="text" class="form-control" id="floatingInput" @bind-value="registrationModel.Username" placeholder="Username">
                        <label for="floatingInput">UserName</label>
                    </div>
                    <div class="form-floating">
                        <input type="email" class="form-control" id="floatingInput" @bind-value="registrationModel.Username" placeholder="Username">
                        <label for="floatingInput">Email</label>
                    </div>
                    <div class="form-floating">
                        <input type="password" class="form-control" id="floatingPassword1" @bind-value="registrationModel.Password1" placeholder="Password">
                        <label for="floatingPassword1">Password</label>
                    </div>
                    <div class="form-floating">
                        <input type="password" class="form-control" id="floatingPassword2" @bind-value="registrationModel.Password2" placeholder="Repeat Password">
                        <label for="floatingPassword2">Repeat password</label>
                    </div>

                    <button class="w-100 btn btn-lg btn-primary" type="submit">Next </button>
                </EditForm>
            }
            else
            {
                <EditForm Model="@registrationModel" OnValidSubmit="async ()=> await AttemptRegistration(registrationModel)">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-floating">
                        <textarea id="idBio" rows="4" cols="50" @oninput="HandleOnChange"></textarea>
                        <label for="idBio">Biography</label>
                    </div>

                    <div class="form-floating">
                        <InputFile id="idProfilePicture" class="form-control" OnChange="(e)=> registrationModel.ProfilePicture = e.File" />
                        <label for="idProfilePicture">Profile Picture</label>
                    </div>

                    <button class="w-100 btn btn-lg btn-primary" type="submit">Sign in</button>
                </EditForm>
            }
            <p class="text-center text-muted mt-5 mb-0">
                Have already an account?
                <NavLink href="login">
                    <a class="fw-bold text-body">Login here</a>
                </NavLink>
            </p>


        </main>
    </div>
</Animate>

@code {
    readonly RegistrationModel registrationModel = new();
    bool state = true;
    private async Task AttemptRegistration(RegistrationModel registrationModel)
    {
        var attempt = await App.Authentication.RegistrationUser(registrationModel);
        if (attempt)
        {
            NavManager.NavigateTo("/dashboard");
        }
        else
        {
            await UtilityToolkit.CreateToast("Registration Failed");
        }

    }

    private async Task HandleOnChange(ChangeEventArgs args)
    {
        registrationModel.Biography = args.Value.ToString();
    }
    private void NextSlide()
    {
        state = !state;
    }
}