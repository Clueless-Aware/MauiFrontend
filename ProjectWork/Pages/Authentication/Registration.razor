@page "/registration"
@using ProjectWork.Models.Core.Authentication
@using ProjectWork.Utilities
@layout MainLayout
@inject NavigationManager NavManager

<style>

    main {
        background-image: url("bg-3.jpg");
        background-size: cover;
        background-position: center center;
        background-repeat: no-repeat;
        background-attachment: fixed;
        min-height: 100% !important;
    }

</style>

<div class="d-flex align-items-center justify-content-center">
    <div id="registration-card" class="card w3-card-4 w3-round-xlarge w3-white w3-padding-large">
        <figure class="text-center">
            <span class="material-symbols-outlined w3-xxxlarge">
                app_registration
            </span>
            <blockquote class="blockquote">
                <p>Create an account</p>
            </blockquote>

        </figure>
        <div class="form-signin">

            @if (state)
            {
                <EditForm Model="@registrationModel" OnValidSubmit="NextSlide">
                    <div id="hideLogo">
                    </div>

                    <div class="form-floating">
                        <input type="text" class="form-control w3-round w3-margin-bottom" id="floatingInput" @bind-value="registrationModel.Username" placeholder="Username">
                        <label for="floatingInput">Username *</label>
                    </div>
                    <div class="form-floating">
                        <input type="email" class="form-control w3-round w3-margin-bottom" id="floatingInput" @bind-value="registrationModel.Email" placeholder="Username">
                        <label for="floatingInput">Email *</label>
                    </div>
                    <div class="form-floating">
                        <input type="password" class="form-control w3-round w3-margin-bottom" id="floatingPassword1" @bind-value="registrationModel.Password1" placeholder="Password">
                        <label for="floatingPassword1">Password *</label>
                    </div>
                    <div class="form-floating">
                        <input type="password" class="form-control w3-round w3-margin-bottom" id="floatingPassword2" @bind-value="registrationModel.Password2" placeholder="Repeat Password">
                        <label for="floatingPassword2">Repeat password *</label>
                    </div>
                    <br/>
                    <DataAnnotationsValidator/>
                    <ValidationSummary/>
                    <button class="w-100 btn btn-lg btn-primary general-button" type="submit">Next </button>
                </EditForm>
            }
            else
            {
                <EditForm Model="@registrationModel" OnValidSubmit="async () => await AttemptRegistration(registrationModel)">
                    <DataAnnotationsValidator/>
                    <ValidationSummary/>

                    <div class="form-floating">
                        <InputTextArea id="idBio" name="message" class="form-control" placeholder="Write your biography here." rows="6" @bind-Value="registrationModel.Biography"/>
                        <label for="idBio">Biography</label>
                    </div>
                    <br/>
                    <div class="form-floating w-100">
                        <div class="w3-margin-bottom w3-padding-large">
                            <label class="w3-padding w3-margin-top" for="idProfilePicture">Profile Picture</label>
                            <div class="form-control w-100">
                                <InputFile class="w3-padding-16 w-100" id="idProfilePicture" OnChange="e => registrationModel.ProfilePicture = e.File"/>
                            </div>
                        </div>
                    </div>

                    <button class="w-100 general-button w3-margin-top w3-margin-bottom" type="submit">Sign up</button>

                    <input type="button" class="w-100 general-button w3-margin-top w3-margin-bottom" @onclick="NextSlide" value="Back">
                </EditForm>
            }
            <p class="text-center text-muted mt-5 mb-0">
                Have already an account?
                <NavLink href="login">
                    <a class="fw-bold text-body w3-text-red">Login here</a>
                </NavLink>
            </p>
        </div>
    </div>
</div>

@code {
    readonly RegistrationModel registrationModel = new();
    bool state = true;


    private async Task AttemptRegistration(RegistrationModel registrationModel)
    {
        if (registrationModel.Password1 != registrationModel.Password2)
        {
            await UtilityToolkit.CreateToast("The two password fields didn't match.");
            return;
        }
        var attempt = await App.Authentication.RegistrationUser(registrationModel);
        if (attempt.status)
        {
            NavManager.NavigateTo("Home");
        }
        else
        {
            await UtilityToolkit.CreateToast(attempt.message);
        }
    }


    private void NextSlide()
    {
        state = !state;
    }


}