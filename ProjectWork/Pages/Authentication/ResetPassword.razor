@page "/reset-password"
@using ProjectWork.Utilities
@using System.ComponentModel.DataAnnotations
@using ProjectWork.Resources.Static
@layout MainLayout
<Animate Animation="Animations.SlideDown" Duration="TimeSpan.FromSeconds(0.2)" class="text-center" style="height: 100%; width: 100%; display: flex !important; align-items: center; justify-content: center; padding-top: 40px; padding-bottom: 40px;background-color:rgba(0, 0, 0, 0.5);">

    <div id="password-card" class="card">
        <div class="card-header">
            <img src="https://i.ibb.co/rshckyB/car-key.png" alt="car-key" border="0">
            <h2 class="text-center">Forgot Password?</h2>
            <p>You can reset your password here.</p>
        </div>
        <main class="form-signin">

            <EditForm Model="ModelEmail" id="register-form" role="form" autocomplete="off" class="form" OnValidSubmit="async ()=>await SendEmail(ModelEmail.Email)">
                <div class="form-group">
                    <div class="input-group">
                        <h4>Insert your email to receive the key to reset your password</h4>
                        <p>If your email coincide with your email registration, we will send you a email</p>
                    </div>
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-envelope color-blue"></i></span>
                        <input id="forgetEmail" name="forgetEmail" placeholder="Email" class="form-control" @bind-value="ModelEmail.Email" type="text">
                    </div>
                </div>
                <DataAnnotationsValidator />
                <ValidationSummary />
                <br />
                <div class="form-group">
                    <input name="btnForget" class="btn btn-lg btn-primary btn-block btnForget" value="Send email" type="submit">
                </div>
            </EditForm>

        </main>
    </div>


</Animate>

@code {

    EmailReset ModelEmail = new();
    private async Task SendEmail(string userEmail)
    {
        var sentEmail = await App.Authentication.SendGenericRequest(new { email = userEmail },Endpoints.GetEmailResetEndpoint());
        if (sentEmail)
        {
            await UtilityToolkit.CreateToast("Email Sent");
        }
    }

    class EmailReset
    {
        [Required]
        public string Email { get; set; }
    }

}
