@page "/detail-artwork/{Id:int}"

@using ProjectWork.ViewModels.Artwork
@using ProjectWork.Models.Artwork
@using ProjectWork.Services.Core.OpenAI

@inject SearchArtworkVM ArtworkDirector
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager

<div id="page-content" class="card m-4 shadow-lg p-3 bg-white">

    <!-- ======= End Page Header ======= -->
    <div class="page-header d-flex align-items-center card-header">
        <div class="container position-relative">

            <button class="w3-right w3-button w3-hover-shadow w3-round" @onclick="close">
                <span class="material-symbols-outlined">
                    close
                </span>
            </button>


            <div class="row d-flex justify-content-center">
                <div class="col-lg-6 text-center card-title">
                    <h1>@_artwork.Title</h1>
                </div>
            </div>
        </div>
    </div>
    <!-- End Page Header -->


    <section id="gallery-single" class="gallery-single card-body">
        <div class="container">

            <div class="position-relative d-flex justify-content-center img-container">
                <div class="h-100">
                    <a href="@_artwork.ImageUrl" data-fancybox="gallery" data-caption="@_artwork.Title">
                        <img class="img-artwork" src="@_artwork.ImageUrl" alt="@_artwork.Title" />
                    </a>
                </div>
            </div>

            <div class="row justify-content-between gy-4 mt-4">

                @if (_artwork.Description.Length > 0)
                {
                    <div class="col-lg-8">
                        <div class="portfolio-description">
                            <h2>Description</h2>
                            <p>
                                @_artwork.Description
                            </p>
                        </div>
                    </div>
                } else
                {
                    <button class="general-button w-25" @onclick="askChatGPT"> Ask ChatGPT about this.</button>
                    @if(description.Length > 0)
                    {
                        <div class="col-lg-8">
                            <div class="portfolio-description">
                                <h2>Description</h2>
                                <p>
                                    @description
                                </p>
                            </div>
                        </div>
                    }
                }

                <div class="col-lg-3">
                    <div class="portfolio-info">
                        <h3>Artwork information</h3>
                        <ul>
                            <li>
                                <strong>Author</strong> <span>@_artwork.Author</span>
                            </li>
                            <li>
                                <strong>Date</strong> <span>@_artwork.Date</span>
                            </li>
                            <li>
                                <strong>Technique</strong> <span>@_artwork.Technique</span>
                            </li>
                            <li @onclick="DriveToMuseum">
                                <strong>Location</strong> <span>@_artwork.Location</span>
                            </li>
                            <li>
                                <strong>Form</strong> <span>@_artwork.Form</span>
                            </li>
                            <li>
                                <strong>Type</strong> <span>@_artwork.Type</span>
                            </li>
                            <li>
                                <strong>Time Frame</strong> <span>@_artwork.TimeFrame</span>
                            </li>
                        </ul>
                    </div>
                </div>

            </div>
        </div>
    </section>
</div>


@code {

    [Parameter]
    public int Id { get; set; }

    public string description = "";

    private BaseArtwork _artwork;
    private IList<BaseArtwork> _otherArtworks;

    protected override async void OnParametersSet()
    {
        _artwork = ArtworkDirector.GenericData.Data.SingleOrDefault(a => a.Id == Id);
        var baseArtwork = _artwork;

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JsRuntime.InvokeVoidAsync("Main.start");
    }

    private async Task DriveToMuseum()
    {
        var placeMark = new Placemark
            {
                CountryName = _artwork.Location
            };
        var options = new MapLaunchOptions { Name = "Microsoft Building 25" };
        try
        {
            await Map.Default.OpenAsync(placeMark, options);
        }
        catch (Exception ex)
        {
            // No map application available to open or place mark can not be located
        }
    }

    private void close()
    {
        NavManager.NavigateTo("/Home");
    }

    private async void askChatGPT()
    {
        string author = _artwork.Author.Replace(',',' ');
        author.Reverse();
        author.ToLower();

        string title = _artwork.Title;
        string date = _artwork.Date;


        ChatGpt ai = new ChatGpt();

        string prompt = "Write me a description of the artwork of " +  author + " named " + title + "made in " + date;
        description = "wait...";
        await ai.generateDescription(prompt);
        description = ai.reply.ReplaceLineEndings("<br>");
    }

}