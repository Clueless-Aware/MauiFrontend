@page "/dashboard"
@using ProjectWork.ViewModels.Admin
@using ProjectWork.Models.Requests
@using ProjectWork.Utilities
@inject RequestsVirtualMachine RequestsVirtualMachine
@layout AdminLayout

<h2>User requests</h2>
<div class="table-responsive">
    <input type="checkbox" id="checkup"
           @oninput="() => ShowReviewed = !ShowReviewed" checked="@ShowReviewed"/>
    <label for="checkup">Show viewed requests</label>
    <table class="table table-sm table-group-divider table-hover">
        <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">User email</th>
            <th scope="col">Subject</th>
            <th scope="col">Content</th>
            <th scope="col">Date</th>
            <th scope="col">Seen</th>
            <th scope="col">Completed</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var request in RequestsVirtualMachine.GenericData.Data)
        {
            @if (request.IsSeen != true || ShowReviewed)
            {
                <tr class="@GetRowStyle(request)">
                    <th scope="row">@request.Id</th>
                    <td>@request.UserEmail</td>
                    <td>@request.Subject</td>
                    <td>@request.Content</td>
                    <td>@request.Date</td>
                    <td>
                        <input type="checkbox" checked="@request.IsSeen"
                               @oninput="async () => await UpdateRequestToSeen(request)"/>
                    </td>
                    <td>
                        <input type="button" id="toArchive" value="Completed"
                               @onclick="async () => await UpdateRequestToCompleted(request)"/>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
    @if (RequestsVirtualMachine.GenericData.Data.Any(request => request.IsCompleted))
    {
        @foreach (var request in RequestsVirtualMachine.GenericData.Data.Where(request => request.IsCompleted))
        {
            <h2>Archived requests</h2>
            <table class="table table-sm table-group-divider table-hover">
                <thead>
                </thead>
                <tbody>
                <td colspan="5">
                    <bold>
                        Request n° @request.Id is marked as seen
                    </bold>
                </td>
                </tbody>
            </table>
        }
    }

</div>


@code{
    private bool ShowReviewed { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await RequestsVirtualMachine.GetGenericDataFromPageAsync();
        await base.OnInitializedAsync();
    }

    private static string GetRowStyle(RequestModel request)
    {
        if (request.IsSeen) return "table-success";
        return request.IsCritical ? "table-danger" : "table-info";
    }

    private async Task UpdateRequestToSeen(RequestModel request)
    {
        request.IsSeen = !request.IsSeen;
        await RequestsVirtualMachine.UpdateItemAsync(request);
    }

    private async Task UpdateRequestToCompleted(RequestModel request)
    {
        if (!request.IsSeen)
        {
            await UtilityToolkit.CreateToast("Waring you are trying to mark as" +
                                             " completed a request that has not been set as seen");
            return;
        }
        request.IsCompleted = !request.IsCompleted;

        await RequestsVirtualMachine.UpdateItemAsync(request);
    }

}