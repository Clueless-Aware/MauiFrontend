@using ProjectWork.Utilities
@using Microsoft.AspNetCore.Components
@using ProjectWork.Models.Artist
@using ProjectWork.ViewModels.Artist
@inject SearchArtistVM DirectorArtistSearch


<div class="w3-bar w3-padding">
    <form @onsubmit="DoSearch">
        <span>

            <input id="searchBar" type="search"
                   class="w3-padding w3-round-large w3-margin-bottom w3-margin-right w-100" step="any"
                   value="@SearchField" @onchange="e =>{ DirectorArtistSearch.Parameters.SetPage(1);SearchField = (string)e.Value; DirectorArtistSearch.Parameters.SetSearch(SearchField);}" />

            <span class="material-symbols-outlined middle w3-xxlarge">
                low_priority
            </span>
            <label class="switch middle w3-margin-left w3-margin-right">
                <input type="checkbox" checked @onchange="CheckboxChanged">
                <span class="slider round"></span>
            </label>
            <span class="material-symbols-outlined reverse middle w3-xxlarge w3-margin-right">
                low_priority
            </span>
            <button type="submit" id="search" class="general-button">
                <span class="material-symbols-outlined">search</span>
            </button>
        </span>
        @*TODO: CSS TO THIS *@
        <input type="button" @onclick="()=>{ ShowAdvanced=!ShowAdvanced; }" value="Show Advanced Search">
        <input type="button" @onclick="async() => await Reset()" value="Reset">
        @if (ShowAdvanced)
        {


            <div class="input-group d-flex">
                <InputSelect class="form-control p-2" @bind-Value="BaseArtist.Profession">
                    <option value="">Any Profession</option>
                    @foreach (var profession in ArtistFilters.UniqueProfessions.Order())
                    {
                        <option value="@profession">@profession</option>
                    }
                </InputSelect>
                <InputSelect class="form-control p-2" @bind-Value="BaseArtist.School">
                    <option value="" selected>Any School</option>
                    @foreach (var school in ArtistFilters.UniqueSchool.Order())
                    {
                        <option value="@school">@school</option>
                    }
                </InputSelect>
            </div>
        }
    </form>


    <hr />
</div>

@code {
    private string SearchField { get; set; }
    private bool ShowAdvanced { get; set; } = false;
    private BaseArtist BaseArtist { get; set; } = new();
    async Task DoSearch()
    {
        DirectorArtistSearch.Parameters.SetSpecific(BaseArtist);
        await DirectorArtistSearch.GetGenericDataFromPageAsync();
    }
    private async Task CheckboxChanged(ChangeEventArgs e)
    {
        var b = (bool)e.Value;
        DirectorArtistSearch.Parameters.SetOrdering(b ? "name" : "-name");
        await DoSearch();
    }

    private async Task Reset()
    {
        BaseArtist = new();
        DirectorArtistSearch.Parameters.ResetParameters();
        await DirectorArtistSearch.GetGenericDataFromPageAsync();
    }

}