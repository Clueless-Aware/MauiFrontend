@using ProjectWork.Models.Artwork
@using ProjectWork.Models.Core
@using ProjectWork.ViewModels
@inject SearchArtworkVM ArtworkDirector
@inject IJSRuntime JsRuntime

<style>
    img {
        display: block;
        max-width: 560px;
        max-height: auto;
        width: auto;
        height: auto;
    }

    a:link, a:visited {
        color: black;
        padding: 14px 25px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
    }

    a:hover, a:active {
        color: red;
    }
</style>
<div class="w3-card-4 w3-animate-right w3-round-large w3-white w3-margin-bottom w3-padding-top-24">
    <p class="w3-xxlarge">
       <h1>@artwork.Title</h1>
        <button class="w3-round-large w3-center button-padding w3-text-black w3-hover-text-red w3-button">
            <span class="material-symbols-outlined">
                bookmark
            </span>
        </button>
    </p>

    <div class="w3-row">
        <div class="w3-col m6 w3-center w3-padding-large">
            <p><b><i class="fa fa-user w3-margin-right"></i>Photo</b></p><br>
                    <a href="@artwork.ImageUrl" data-fancybox="gallery" data-caption="@artwork.Title">
                        <img class="w3-round w3-image w3-margin-bottom" src="@artwork.ImageUrl" alt="@artwork.Title" />
                    </a>

                @if (ModalVisible)
                {
                    <div class="modal">
                        <img src="@ImageSource" alt="@CaptionText" />
                        <div class="caption">@CaptionText</div>
                        <button @onclick="Close">x</button>
                    </div>
                }
            </div>

            <div class="w3-col m6 w3-padding-large w3-left-align">
                @if (artwork.Description.Length > 0)
                {
                    <p>
                        @artwork.Description
                    </p>
                }
                else
                {
                    <p>
                        Nothing to see
                    </p>
                }
            </div>
        </div>
    </div>

@code {
    [Parameter]
    public Models.Artwork.BaseArtwork artwork { get; set; }

    [Parameter]
    public int Id { get; set; }
    private BaseArtwork _artwork;
    private IList<BaseArtwork> _otherArtworks;


    protected override async void OnParametersSet()
    {
        this._artwork = ArtworkDirector.GenericData.Data.SingleOrDefault(a => a.Id == Id);
        var baseArtwork = this._artwork;
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JsRuntime.InvokeVoidAsync("Main.start");
    }

    private string ImageSource { get; set; }
    private string CaptionText { get; set; }
    private bool ModalVisible { get; set; }

    private void Close()
    {
        ModalVisible = false;
    }

    }
