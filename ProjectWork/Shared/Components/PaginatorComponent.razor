@using ProjectWork.Models.Core
@if (Paginator.TotalPages > 1)
{
    <div class="w3-center">
        <div >
            <button class="general-button-paginator" @onclick="async () => await Paginator.JumpTo()">
                <span class="material-symbols-outlined">
                    keyboard_double_arrow_left
                </span>
            </button>
            <button class="general-button-paginator" @onclick="async () => await Paginator.PreviousData()">
                <span class="material-symbols-outlined">
                    navigate_before
                </span>
            </button>
            <button class="general-button-paginator" @onclick="async () => await Paginator.NextData()">
                <span class="material-symbols-outlined">
                    navigate_next
                </span>
            </button>
            <button class="general-button-paginator" @onclick="async () => await Paginator.JumpTo(Paginator.TotalPages)">
                <span class="material-symbols-outlined">
                    keyboard_double_arrow_right
                </span>
            </button>
        </div>
        <div>
            <span class="w3-margin-left">
                <input class="w3-round w3-padding w-25"
                       type="number" min="1" max="@Paginator.TotalPages"
                       step="any"
                       value="@Paginator.PageIndex" @onchange="goto_page"/>

                <label>
                    of @Paginator.TotalPages
                </label>
            </span>
        </div>
        <hr/>
    </div>
}

@code {

    [Parameter]
    public Paginator Paginator { get; set; }

    private async Task goto_page(ChangeEventArgs e)
    {
        Paginator.PageIndex = Convert.ToInt32((string)e.Value);
        await Paginator.JumpTo(Paginator.PageIndex);
    }

}